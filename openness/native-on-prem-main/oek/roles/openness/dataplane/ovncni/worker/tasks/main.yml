# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

- name: include common vars
  include_vars: ../common/defaults/main.yml

- include_tasks: dnsmasq.yml

- name: build OVS-DPDK images
  block:
    - name: build OVS-DPDK image (this may take some time...)
      docker_image:
        name: ovs-ovn
        source: build
        state: present
        force_source: yes
        build:
          path: "{{ _dpdk_install_dir }}"
          dockerfile: Dockerfile
          pull: yes
          use_config_proxy: yes

    - name: clean docker image files from dpdk directory
      file:
        state: absent
        path: "{{ _dpdk_install_dir }}/{{ item }}"
      with_items: "{{ _dockerimage_files_to_rm }}"

- name: open ovn firewall rules
  ignore_errors: yes
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
  - 6081/udp

- name: run ovn-ovs-dpdk container
  docker_container:
    name: ovs-ovn
    image: ovs-ovn
    privileged: yes
    network_mode: host
    published_ports:
      - 6081:6081/udp
    volumes:
      - "{{ _huge_dir }}:{{ _huge_dir }}:rw"
      - "{{ _ovs_dir }}:{{ _ovs_dir }}:rw"
      - /dev:/dev:rw
      - /lib/modules:/lib/modules:rw
    memory: "{{ ovncni_dpdk_resource_limits }}"

- name: waiting for OVS DB on the node
  wait_for:
    path: /var/run/openvswitch/db.sock
    timeout: 600

- name: build OVN CNI
  block:
  - name: build ovn cni executable
    shell: source /etc/profile && make ovncni
    args:
      chdir: "{{ _sync_sources_dest }}"
  - name: create /opt/cni/bin/
    file:
      path: /opt/cni/bin/
      state: directory
  - name: copy ovn cni to /opt/cni/bin/ovn
    copy:
      src: "{{ _sync_sources_dest }}/dist/ovncni/ovncni"
      dest: /opt/cni/bin/ovn
      remote_src: yes
      mode: '0755'

- name: add OVN_NB_DB env to /etc/environment
  lineinfile:
    path: /etc/environment
    state: present
    line: "OVN_NB_DB=tcp:{{ _controller_ip }}:6641"

- name: update EVA config file
  shell: >
    set -o pipefail &&
    jq '.UseCNI=true' /var/lib/appliance/configs/eva.json | sponge /var/lib/appliance/configs/eva.json
  changed_when: true

- name: create NTS config for ELA's InterfaceService compatibility
  block:
  - name: create /var/lib/appliance/nts
    file:
      path: /var/lib/appliance/nts
      state: directory
  - name: create empty nts.cfg
    file:
      path: /var/lib/appliance/nts/nts.cfg
      state: touch

- name: install OVN tools dependencies
  yum:
    name: unbound
    state: installed
    update_cache: yes
    allow_downgrade: true
    validate_certs: no
- name: install ovs-vsctl
  command: yum install -y https://github.com/alauda/ovs/releases/download/2.12.0-5/openvswitch-2.12.0-5.el7.x86_64.rpm
  args:
    warn: false
  register: yum_result
  failed_when: "yum_result.rc != 0 and 'Nothing to do' not in yum_result.stderr"
  changed_when: true
