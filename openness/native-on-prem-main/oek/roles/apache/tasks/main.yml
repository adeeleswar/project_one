# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---
- debug:
    msg: "Installing the following packages: {{ _apache_packages }}"
- name: install Apache
  yum:
    name: "{{ _apache_packages }}"
    state: present
    skip_broken: yes

- name: acquire controller's root CA
  command: docker cp edgecontroller_cce_1:/artifacts/certificates/ca/cert.pem .
  args:
    chdir: "{{ _certs_path }}/"
  changed_when: true

- name: acquire controller's key
  command: docker cp edgecontroller_cce_1:/artifacts/certificates/ca/key.pem .
  args:
    chdir: "{{ _certs_path }}/"
  changed_when: true

- name: generate Apache key (2048 bits)
  command: openssl11 genrsa -out apache.key 2048
  args:
    chdir: "{{ _certs_path }}/"
  changed_when: true

- name: create Apache CSR
  command: openssl11 req -new -key apache.key -out apache.csr -batch
  args:
    chdir: "{{ _certs_path }}/"
  changed_when: true

- name: set IP address - inventory
  set_fact:
    ip_address: "{{ ansible_host }}"
  when:
    - ansible_host != "127.0.0.1"
    - not ip_address

- name: set IP address - localhost installation
  set_fact:
    ip_address: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  when:
    - ansible_host == "127.0.0.1"
    - not ip_address

- name: add extension to /etc/pki/tls/openssl.cnf
  blockinfile:
    path: /etc/pki/tls/openssl.cnf
    block: |
      [ req_ext ]
      subjectAltName=IP:"{{ ip_address }}"

- name: generate self-signed Apache certificate
  command: >
    openssl11 x509 -req -in apache.csr -CA cert.pem -CAkey key.pem -CAcreateserial -out apache.crt -days 500
    -sha256 -extensions req_ext -extfile /etc/pki/tls/openssl.cnf
  args:
    chdir: "{{ _certs_path }}/"
  changed_when: true

- name: set SSL certificate file
  lineinfile:
    path: /etc/httpd/conf.d/ssl.conf
    regexp: "^SSLCertificateFile.*$"
    line: "SSLCertificateFile /etc/ssl/certs/apache.crt"

- name: set SSL key file
  lineinfile:
    path: /etc/httpd/conf.d/ssl.conf
    regexp: "^SSLCertificateKeyFile.*$"
    line: "SSLCertificateKeyFile /etc/ssl/certs/apache.key"

- name: add firewall rules for Apache (http)
  command: firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -p tcp --dport 80 -j ACCEPT
  ignore_errors: yes
  changed_when: true

- name: add firewall rules for for Apache (https)
  command: firewall-cmd --permanent --direct --add-rule ipv4 filter INPUT 0 -p tcp --dport 443 -j ACCEPT
  ignore_errors: yes
  changed_when: true

- name: reload firewall rules
  command: firewall-cmd --reload
  ignore_errors: yes
  changed_when: false

- name: enable and start httpd service
  systemd:
    name: httpd
    enabled: yes
    masked: no
    state: restarted
    daemon_reload: yes
