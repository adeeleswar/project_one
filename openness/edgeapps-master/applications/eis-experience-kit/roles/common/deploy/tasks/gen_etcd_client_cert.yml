# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

- name: Extract default SAN from openssl.cnf
  shell: awk -F "=" '/^SAN/ {print $2}'  {{ etcd_certs_location }}/openssl.cnf
  register: san_output
  changed_when: false

- name: Get cluster IP
  shell: kubectl -n eis get svc -o "jsonpath={.items[?(@.metadata.name==\"ia-etcd-service\")].spec.clusterIP}"
  register: clusterip
  changed_when: false

- name: Set facts
  set_fact:
    cluster_ip: "{{ clusterip.stdout }}"
    default_san: "{{ san_output.stdout | replace('\"','') | trim }}"

- debug:
    msg: "CLUSTER IP: {{ cluster_ip }}"

- name: Create directory for {{ app_name }} certificates
  file:
    path: "{{ etcd_certs_location }}/{{ app_name }}"
    state: directory
    mode: '0744'

- name: Change common_name in openssl.cnf to {{ app_name }}
  lineinfile:
    path: "{{ etcd_certs_location }}/openssl.cnf"
    regexp: '^common_name'
    line: "common_name = {{ app_name }}"

- name: Change SAN for server
  replace:
    path: "{{ etcd_certs_location }}/openssl.cnf"
    regexp: '^subjectAltName.*$'
    replace: "subjectAltName = \"{{ default_san }},{{ san_ca }},IP:{{ cluster_ip }}\""
  when: peer == "server"

- name: Change SAN for client
  replace:
    path: "{{ etcd_certs_location }}/openssl.cnf"
    regexp: '^subjectAltName.*$'
    replace: "subjectAltName = \"{{ default_san }}\""
  when: peer == "client"


- name: Generate certificate for {{ app_name }}
  shell: >-
      openssl req -config  {{ etcd_certs_location }}/openssl.cnf
      -new
      -days {{ cert_days }}
      -newkey rsa:{{ ca_default_bits }}
      -keyout {{ etcd_certs_location }}/{{ app_name }}/{{ key_name }}
      -out {{ etcd_certs_location }}/{{ app_name }}/req.pem
      -outform PEM
      -subj /CN={{ app_name }}/O={{ peer }}/L=$$$/
      -nodes
  environment:
    SSL_KEY_LENGTH: "{{ ca_default_bits }}"
  changed_when: true

- name: Sign {{ app_name }} certificate with RootCA
  command: >-
      openssl ca -config {{ etcd_certs_location }}/openssl.cnf
      -days {{ cert_days }}
      -cert {{ rootca_cert }}
      -keyfile {{ rootca_key }}
      -in {{ etcd_certs_location }}/{{ app_name }}/req.pem
      -out {{ etcd_certs_location }}/{{ app_name }}/{{ cert_name }}
      -outdir {{ rootca_location }}/certs
      -notext
      -batch
      -extensions {{ peer }}_extensions
  args:
    chdir: "{{ etcd_certs_location }}"
  environment:
    SSL_KEY_LENGTH: "{{ ca_default_bits }}"
  changed_when: true

- name: Remove req.pem file
  file:
    path: "{{ etcd_certs_location }}/{{ app_name }}/req.pem"
    state: absent
